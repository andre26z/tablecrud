{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/andresantos/Desktop/crud/tablecrud/app/api/projects/%5Bid%5D/favorite/route.ts"],"sourcesContent":["// app/api/projects/[id]/favorite/route.ts\nimport { NextRequest, NextResponse } from 'next/server';\nimport fs from 'fs';\nimport path from 'path';\n\nexport async function PUT(request: NextRequest, { params }: { params: { id: string } }) {\n\ttry {\n\t\tconst projectId = params.id;\n\t\tconst { favorite } = await request.json();\n\n\t\t// Read current data\n\t\tconst filePath = path.join(process.cwd(), 'db.json');\n\t\tconst fileData = fs.readFileSync(filePath, 'utf8');\n\t\tconst data = JSON.parse(fileData);\n\n\t\t// Find project index\n\t\tconst projectIndex = data.projects.findIndex(\n\t\t\t(p: any) => p.key === projectId || p.projectId === projectId\n\t\t);\n\n\t\tif (projectIndex === -1) {\n\t\t\treturn NextResponse.json({ error: 'Project not found' }, { status: 404 });\n\t\t}\n\n\t\t// Update favorite status\n\t\tdata.projects[projectIndex].favorite = favorite;\n\n\t\t// Write updated data back to file\n\t\tfs.writeFileSync(filePath, JSON.stringify(data, null, 2));\n\n\t\treturn NextResponse.json({\n\t\t\tsuccess: true,\n\t\t\tfavorite: favorite,\n\t\t\tproject: data.projects[projectIndex],\n\t\t});\n\t} catch (error) {\n\t\tconsole.error('Error updating favorite status:', error);\n\t\treturn NextResponse.json({ error: 'Failed to update favorite status' }, { status: 500 });\n\t}\n}\n"],"names":[],"mappings":"AAAA,0CAA0C;;;;AAC1C;AACA;AACA;;;;AAEO,eAAe,IAAI,OAAoB,EAAE,EAAE,MAAM,EAA8B;IACrF,IAAI;QACH,MAAM,YAAY,OAAO,EAAE;QAC3B,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEvC,oBAAoB;QACpB,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;QAC1C,MAAM,WAAW,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QAC3C,MAAM,OAAO,KAAK,KAAK,CAAC;QAExB,qBAAqB;QACrB,MAAM,eAAe,KAAK,QAAQ,CAAC,SAAS,CAC3C,CAAC,IAAW,EAAE,GAAG,KAAK,aAAa,EAAE,SAAS,KAAK;QAGpD,IAAI,iBAAiB,CAAC,GAAG;YACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,yBAAyB;QACzB,KAAK,QAAQ,CAAC,aAAa,CAAC,QAAQ,GAAG;QAEvC,kCAAkC;QAClC,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,MAAM,MAAM;QAEtD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACxB,SAAS;YACT,UAAU;YACV,SAAS,KAAK,QAAQ,CAAC,aAAa;QACrC;IACD,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAmC,GAAG;YAAE,QAAQ;QAAI;IACvF;AACD","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}